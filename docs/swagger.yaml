basePath: /
definitions:
  handlers.GetAllListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/todo.TodoList'
        type: array
    type: object
  handlers.errorResponse:
    properties:
      message:
        type: string
    type: object
  handlers.signInInput:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  handlers.statusResponse:
    properties:
      status:
        type: string
    type: object
  todo.ListsItem:
    properties:
      id:
        type: integer
      itemId:
        type: integer
      listId:
        type: integer
    type: object
  todo.TodoItem:
    properties:
      description:
        example: Item description
        type: string
      done:
        example: false
        type: boolean
      id:
        type: integer
      title:
        example: Item title
        type: string
    required:
    - title
    type: object
  todo.TodoList:
    properties:
      description:
        example: Milk, Bread, Eggs
        type: string
      id:
        type: integer
      title:
        example: Buy groceries
        type: string
    required:
    - title
    type: object
  todo.UpdateItemInput:
    properties:
      description:
        example: update description
        type: string
      done:
        example: false
        type: boolean
      title:
        example: item update
        type: string
    type: object
  todo.UpdateListInput:
    properties:
      description:
        example: update description
        type: string
      title:
        example: list update
        type: string
    type: object
  todo.User:
    properties:
      name:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - name
    - password
    - username
    type: object
host: localhost:8001
info:
  contact: {}
  description: App with Go
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: http://swagger.io/terms/
  title: App with Go
  version: "1.0"
paths:
  /api/items/{id}:
    delete:
      consumes:
      - application/json
      description: Delete item by item ID
      operationId: delete-item
      parameters:
      - description: Item ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.statusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete todo item
      tags:
      - items
    get:
      consumes:
      - application/json
      description: Get single item by item ID
      operationId: get-item-by-id
      parameters:
      - description: Item ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/todo.TodoItem'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get item by ID
      tags:
      - items
    put:
      consumes:
      - application/json
      description: Update item by item ID
      operationId: update-item
      parameters:
      - description: Item ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated item info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/todo.UpdateItemInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.statusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update todo item
      tags:
      - items
  /api/lists:
    get:
      consumes:
      - application/json
      description: get all lists
      operationId: get-all-lists
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.GetAllListResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handlers.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get All Lists
      tags:
      - lists
    post:
      consumes:
      - application/json
      description: Create a new todo list
      operationId: create-list
      parameters:
      - description: List info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/todo.TodoList'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handlers.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create todos list
      tags:
      - lists
  /api/lists/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a todo list by ID
      operationId: delete-list
      parameters:
      - description: List ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.statusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete todo list
      tags:
      - lists
    get:
      consumes:
      - application/json
      description: get list by id
      operationId: get-list-by-id
      parameters:
      - description: List ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/todo.ListsItem'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handlers.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get List By Id
      tags:
      - lists
    put:
      consumes:
      - application/json
      description: Update an existing todo list
      operationId: update-list
      parameters:
      - description: List ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated list info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/todo.UpdateListInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.statusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update todo list
      tags:
      - lists
  /api/lists/{id}/items:
    get:
      consumes:
      - application/json
      description: Get all items by list ID
      operationId: get-all-items
      parameters:
      - description: List ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/todo.TodoItem'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get all items from list
      tags:
      - items
    post:
      consumes:
      - application/json
      description: Create an item inside a list
      operationId: create-item
      parameters:
      - description: List ID
        in: path
        name: id
        required: true
        type: integer
      - description: Item info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/todo.TodoItem'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create todo item
      tags:
      - items
  /auth/sign-in:
    post:
      consumes:
      - application/json
      description: login
      operationId: login
      parameters:
      - description: credentials
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/handlers.signInInput'
      produces:
      - application/json
      responses:
        "200":
          description: token
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handlers.errorResponse'
      summary: SignIn
      tags:
      - auth
  /auth/sign-up:
    post:
      consumes:
      - application/json
      description: Create account
      operationId: create-account
      parameters:
      - description: account info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/todo.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handlers.errorResponse'
      summary: SignUp
      tags:
      - auth
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
